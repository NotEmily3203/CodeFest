rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Restrict access to authenticated users for all collections by default
    match /{document=**} {
      allow read, write: if request.auth != null;
    }

    // Specific rules for a 'users' collection
    // Users can read their own document and write to their 'settings' subcollection
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId &&
                   (request.resource.data.keys().hasOnly(['settings']) ||
                   request.resource.data.keys().size() == 0);
    }

    // Specific rules for a 'publicData' collection
    // All authenticated users can read, but only admins can write
    match /publicData/{documentId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && isAdmin(request.auth.uid);
    }

    // Function to check if a user is an admin
    function isAdmin(uid) {
      return get(/databases/$(database)/documents/admins/$(uid)).data.isAdmin == true;
    }

    // Rules for other collections can be added here following the same pattern
  }
}
